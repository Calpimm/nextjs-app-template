# .github/workflows/nextjs.yml
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Avoid canceling a deployment in-progress if a new one is triggered
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          cd template-base
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
          # This injects the basePath in your next.config.js 
          # and disables server-side image optimization.

      - name: Restore .next/cache
        uses: actions/cache@v4
        with:
          path: template-base/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('template-base/**/package-lock.json', 'template-base/**/yarn.lock') }}-${{ hashFiles('template-base/**/*.js', 'template-base/**/*.jsx', 'template-base/**/*.ts', 'template-base/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('template-base/**/package-lock.json', 'template-base/**/yarn.lock') }}-

      - name: Install dependencies
        run: cd template-base && ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build with Next.js
        run: cd template-base && ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Export static site
        run: cd template-base && ${{ steps.detect-package-manager.outputs.runner }} next export
        # This creates an `out` folder inside `template-base/out`.

      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: template-base/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
